{"ast":null,"code":"import { renderSlot as _renderSlot, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")], 512\n  /* NEED_PATCH */\n  )), [[_vShow, _ctx.visible]]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;wCAAXC,oBAEM,KAFN,cAEM,CADFC,YAAaC,WAAb,EAAa,SAAb,CACE,CAFN;;AAAA,gBAAsBA","names":["class","_createElementBlock","_renderSlot","_ctx"],"sourceRoot":"","sources":["/home/marcolin/Documents/Mon_Projet/new_vue/src/components/carouselComp.vue"],"sourcesContent":["<template id=\"\">\n    <div class=\"\" v-show=\"visible\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default{\n        name: \"carouselComp\",\n        data() {\n            return{\n                index: 0,\n                slides: []\n        }\n    },\n        mounted() {\n            this.slides=this.children\n            this.slides.forEach((slide, i) => {\n                slide.index=i\n            })\n    }\n</script>\n"]},"metadata":{},"sourceType":"module"}