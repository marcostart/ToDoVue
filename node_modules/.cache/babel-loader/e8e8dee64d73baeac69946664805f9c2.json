{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, vShow as _vShow } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"boite\"\n};\nconst _hoisted_3 = {\n  class: \"header\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"titre\"\n}, \"ToDo\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"row\"\n};\nconst _hoisted_7 = {\n  class: \"row\",\n  style: {\n    \"border\": \"solid 2px red\",\n    \"text-align\": \"left\",\n    \"background-color\": \"rgb(200,200,200)\",\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"col-6 offset-3\"\n};\nconst _hoisted_9 = {\n  class: \"row\",\n  style: {\n    \"border\": \"solid 2px red\",\n    \"text-align\": \"left\",\n    \"background-color\": \"rgb(200,200,200)\"\n  }\n};\nconst _hoisted_10 = [\"onUpdate:modelValue\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onUpdate:modelValue\"];\nconst _hoisted_13 = {\n  class: \"\"\n};\nconst _hoisted_14 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"header\", _hoisted_3, [_hoisted_4, _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"col-6 offset-3\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.action = $event),\n    type: \"text\",\n    name: \"\",\n    placeholder: \"Insérer une nouvelle tâche\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addNew && $options.addNew(...args), [\"enter\"]))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.action]])])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $options.cocher = $event),\n    name: \"\",\n    value: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $options.cocher]]), _createTextVNode(\" \" + _toDisplayString($data.retour), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filterTasks, tache => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: _normalizeClass([\"col-6 offset-3\", {\n        barre: tache.completed\n      }]),\n      key: tache\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => tache.completed = $event,\n      name: \"\",\n      id: \"inp1\",\n      value: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_10), [[_vModelCheckbox, tache.completed]]), _createElementVNode(\"label\", {\n      onDblclick: _cache[3] || (_cache[3] = $event => $options.writeTask()),\n      for: \"edit\"\n    }, _toDisplayString(tache.name), 33\n    /* TEXT, HYDRATE_EVENTS */\n    ), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: \"inp2\",\n      name: \"\",\n      value: \"\",\n      onClick: $event => $options.deleteIt(tache)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11), _withDirectives(_createElementVNode(\"input\", {\n      name: \"edit\",\n      type: \"text\",\n      id: \"edit\",\n      \"onUpdate:modelValue\": $event => tache.name = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_12), [[_vModelText, tache.name]])], 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _withDirectives(_createElementVNode(\"footer\", null, [_createElementVNode(\"strong\", null, _toDisplayString($options.remain) + \" tâche(s) restante(s)\", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass([\"btn btn-outline-danger\", {\n      active: $data.filter === 'todo'\n    }]),\n    name: \"button\",\n    onClick: _cache[4] || (_cache[4] = $event => $data.filter = 'todo')\n  }, \"A faire\", 2\n  /* CLASS */\n  ), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass([\"btn btn-outline-danger\", {\n      active: $data.filter === 'done'\n    }]),\n    name: \"button\",\n    onClick: _cache[5] || (_cache[5] = $event => $data.filter = 'done')\n  }, \"Faites\", 2\n  /* CLASS */\n  ), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass([\"btn btn-outline-danger\", {\n      active: $data.filter === 'all'\n    }]),\n    name: \"button\",\n    onClick: _cache[6] || (_cache[6] = $event => $data.filter = 'all')\n  }, \"Toutes\", 2\n  /* CLASS */\n  )]), _withDirectives(_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary btn-large btn-block\",\n    name: \"button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.deleteTask && $options.deleteTask(...args))\n  }, \"Supprimer les tâches achevées\")], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $options.tacheFinie]])], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $options.hideFoot]])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_createElementBlock","_hoisted_4","_hoisted_5","$data","$event","type","name","placeholder","onKeyup","$options","value","_toDisplayString","_Fragment","_renderList","tache","barre","completed","key","id","onDblclick","for","onClick","active"],"sourceRoot":"","sources":["/home/marcolin/Documents/Mon_Projet/new_vue/src/components/TodoComp.vue"],"sourcesContent":["<template id=\"\">\n    <div class=\"container\">\n        <div class=\"boite\">\n            <header class=\"header\">\n                <h1 class=\"titre\">ToDo</h1><br>\n                <div class=\"row\" >\n                    <input class=\"col-6 offset-3\" v-model=\"action\" type=\"text\" name=\"\" placeholder=\"Insérer une nouvelle tâche\" @keyup.enter=\"addNew\">\n                </div>\n            </header >\n            <div class=\"row\" style=\"border: solid 2px red; text-align: left; background-color: rgb(200,200,200); margin-top: 20px;\">\n                <div class=\"col-6 offset-3\">\n                    <input type=\"checkbox\" v-model=\"cocher\" name=\"\" value=\"\" >\n                    {{ retour }}\n                </div>\n            </div>\n            <div class=\"row\" style=\"border: solid 2px red; text-align: left; background-color: rgb(200,200,200);\">\n            <ul>\n                <li class=\"col-6 offset-3\" v-for=\"tache in filterTasks\" :class=\"{barre: tache.completed}\" :key=\"tache\">\n                    <input type=\"checkbox\" v-model=\"tache.completed\" name=\"\" id=\"inp1\" value=\"\" >\n                    <label @dblclick=\"writeTask()\" for=\"edit\">{{ tache.name }}</label>\n                    <input type=\"checkbox\" id=\"inp2\" name=\"\" value=\"\" @click=\"deleteIt(tache)\">\n                    <input name=\"edit\" type=\"text\" id=\"edit\" v-model=\"tache.name\">\n                </li>\n            </ul>\n\n            </div>\n            <footer v-show=\"hideFoot\">\n                <strong>{{remain}} tâche(s) restante(s)</strong>\n                <div class=\"\">\n                    <button type=\"button\" class=\"btn btn-outline-danger\" :class=\"{active: filter==='todo'}\" name=\"button\" @click=\"filter= 'todo'\">A faire</button>\n                    <button type=\"button\" class=\"btn btn-outline-danger\" :class=\"{active: filter==='done'}\" name=\"button\" @click=\"filter= 'done'\">Faites</button>\n                    <button type=\"button\" class=\"btn btn-outline-danger\" :class=\"{active: filter==='all'}\" name=\"button\" @click=\"filter= 'all'\">Toutes</button>\n                </div>\n                <div class=\"\" v-show=\"tacheFinie\">\n                    <button type=\"button\" class=\"btn btn-secondary btn-large btn-block\" name=\"button\" @click=\"deleteTask\">Supprimer les tâches achevées</button>\n                </div>\n            </footer>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\n    export default {\n        name: \"TodoComp\",\n        data() {\n            return{\n                taches: [{\n                    name: \"first action\",\n                    completed: false\n                }],\n                action: \"\",\n                filter: \"all\",\n                retour: \"Tout cocher\"\n            }\n        },\n        methods: {\n            addNew() {\n                this.taches.push({\n                    name: this.action,\n                    completed: false\n                    })\n                    this.action=\"\"\n            },deleteIt(tache) {\n                this.taches= this.taches.filter((ele) => ele!==tache)\n            },\n            deleteTask() {\n                this.taches= this.taches.filter((task) => !task.completed)\n            },\n            writeTask() {\n                console.log('yesssss');\n                document.getElementsByTagName('label')[0].style.display='none';\n                document.getElementById('edit').style.display='block';\n                document.getElementById('inp1').style.display='none';\n                document.getElementById('inp2').style.display='none';\n            }\n        },\n        computed: {\n            cocher: {\n                get() {\n                    return this.remain===0\n                },\n                set(value) {\n                    this.taches.forEach((taches) => taches.completed=value);\n                    if (value) {\n                        this.retour=\"Tout décocher\"\n                    }\n                    else{\n                        this.retour=\"Tout cocher\"\n                    }\n                }\n            },\n            hideFoot() {\n                return this.taches.length >0\n            },\n            remain() {\n                return this.taches.filter((taches) => !taches.completed).length\n            },\n            tacheFinie() {\n                return this.taches.filter((taches) => taches.completed).length >0\n            },\n            filterTasks() {\n                if (this.filter==\"todo\") {\n                    return this.taches.filter((taches)=> !taches.completed)\n                }\n                else if (this.filter==\"done\") {\n                    return this.taches.filter((taches)=> taches.completed)\n                }\n                else {\n                    return this.taches\n                }\n            }\n\n        }\n    }\n\n</script>\n\n<style media=\"screen\">\n    .titre{\n        text-align: center;\n        font-size: 50px;\n        color: rgba(255, 0, 0,0.3);\n    }\n    .barre{\n        text-decoration: line-through;\n        color: rgba(0,0,0,0.2)\n    }\n    .btn {\n        margin: 5px;\n    }\n    .select{\n        text-decoration: underline;\n    }\n    input[type=\"text\"]{\n        border-radius: 15px;\n    }\n    #edit{\n        display: none;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module"}